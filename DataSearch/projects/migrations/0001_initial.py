# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations
import accounts.models
import projects.models
from django.conf import settings


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('labs', '0001_initial'),
        ('persons', '0001_initial'),
        ('audits', '0001_initial'),
        ('branches', '0001_initial'),
        ('divisions', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='NRMRLQAPPRequirement',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(max_length=255, null=True, blank=True)),
                ('last_modified_by', models.CharField(max_length=255, null=True, blank=True)),
                ('the_name', models.CharField(max_length=255, null=True, blank=True)),
                ('is_active', models.CharField(blank=True, max_length=2, null=True, choices=[(b'', b''), (b'Y', b'Y'), (b'N', b'N')])),
                ('user', models.ForeignKey(on_delete=models.CASCADE, blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'ordering': ['the_name'],
            },
        ),
        migrations.CreateModel(
            name='ParticipatingOrganization',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(max_length=255, null=True, blank=True)),
                ('last_modified_by', models.CharField(max_length=255, null=True, blank=True)),
                ('attachment', models.FileField(null=True, upload_to=accounts.models.get_profile_photo_storage_path, blank=True)),
                ('last_name', models.CharField(max_length=30, null=True, blank=True)),
                ('first_name', models.CharField(max_length=30, null=True, blank=True)),
                ('telephone', models.CharField(max_length=30, null=True, blank=True)),
                ('telephone_extension', models.CharField(max_length=30, null=True, blank=True)),
                ('mail_to_name', models.CharField(db_index=True, max_length=255, null=True, blank=True)),
                ('mail_to_address', models.CharField(max_length=255, null=True, blank=True)),
                ('mail_to_city', models.CharField(max_length=255, null=True, blank=True)),
                ('mail_to_state', models.CharField(max_length=255, null=True, blank=True)),
                ('mail_to_zipcode', models.CharField(max_length=255, null=True, blank=True)),
                ('mail_to_mailstop', models.CharField(max_length=255, null=True, blank=True)),
                ('mail_to_note', models.CharField(max_length=255, null=True, blank=True)),
                ('company', models.CharField(max_length=255, null=True, blank=True)),
                ('email_address_epa', models.CharField(max_length=255, null=True, blank=True)),
                ('email_address_other', models.CharField(max_length=255, null=True, blank=True)),
                ('branch', models.ForeignKey(on_delete=models.CASCADE, blank=True, to='branches.Branch', null=True)),
                ('division', models.ForeignKey(on_delete=models.CASCADE, blank=True, to='divisions.Division', null=True)),
                ('lab', models.ForeignKey(on_delete=models.CASCADE, blank=True, to='labs.Lab', null=True)),
                ('user', models.ForeignKey(on_delete=models.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['company'],
            },
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(max_length=255, null=True, blank=True)),
                ('last_modified_by', models.CharField(max_length=255, null=True, blank=True)),
                ('the_name', models.CharField(max_length=255, null=True, blank=True)),
                ('is_active', models.CharField(blank=True, max_length=2, null=True, choices=[(b'', b''), (b'Y', b'Y'), (b'N', b'N')])),
                ('user', models.ForeignKey(on_delete=models.CASCADE, blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'ordering': ['the_name'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(max_length=255, null=True, blank=True)),
                ('last_modified_by', models.CharField(max_length=255, null=True, blank=True)),
                ('attachment', models.FileField(null=True, upload_to=projects.models.get_ed_storage_path, blank=True)),
                ('attachment_02', models.FileField(null=True, upload_to=projects.models.get_ed2_storage_path, blank=True)),
                ('the_name', models.CharField(max_length=255, null=True, blank=True)),
                ('product', models.CharField(max_length=255, null=True, blank=True)),
                ('title', models.TextField(db_index=True, null=True, blank=True)),
                ('the_description', models.TextField(null=True, blank=True)),
                ('weblink', models.CharField(max_length=255, null=True, blank=True)),
                ('ordering', models.DecimalField(null=True, max_digits=10, decimal_places=1, blank=True)),
                ('qa_id', models.CharField(max_length=255, null=True, blank=True)),
                ('ord_rap', models.CharField(max_length=255, null=True, blank=True)),
                ('ord_rap_project', models.CharField(max_length=255, null=True, blank=True)),
                ('ord_rap_task', models.CharField(max_length=255, null=True, blank=True)),
                ('ord_rap_number', models.CharField(max_length=255, null=True, blank=True)),
                ('ord_rap_project_number', models.CharField(max_length=255, null=True, blank=True)),
                ('ord_rap_task_number', models.CharField(max_length=255, null=True, blank=True)),
                ('qapp_approval_date', models.DateField(null=True, blank=True)),
                ('product_qa_approval_date', models.DateField(null=True, blank=True)),
                ('date_project_identified', models.DateField(null=True, blank=True)),
                ('omis_task_number', models.CharField(max_length=255, null=True, blank=True)),
                ('vehicle_number', models.CharField(max_length=255, null=True, blank=True)),
                ('institution_name', models.CharField(max_length=255, null=True, blank=True)),
                ('qmp_required', models.CharField(blank=True, max_length=25, null=True, choices=[(b'', b''), (b'Y', b'Y'), (b'N', b'N')])),
                ('qmp_required_name', models.CharField(max_length=255, null=True, blank=True)),
                ('qmp_approval_date', models.DateField(null=True, blank=True)),
                ('public_or_private', models.CharField(blank=True, max_length=25, null=True, choices=[(b'', b''), (b'PUBLIC', b'PUBLIC'), (b'PRIVATE', b'PRIVATE')])),
                ('branch', models.ForeignKey(on_delete=models.CASCADE, blank=True, to='branches.Branch', null=True)),
                ('collaborators', models.ManyToManyField(related_name='collaborators', to='persons.Person')),
                ('division', models.ForeignKey(on_delete=models.CASCADE, blank=True, to='divisions.Division', null=True)),
                ('lab', models.ForeignKey(on_delete=models.CASCADE, blank=True, to='labs.Lab', null=True)),
                ('nrmrl_qapp_requirement', models.ForeignKey(on_delete=models.CASCADE, blank=True, to='projects.NRMRLQAPPRequirement', null=True)),
                ('participating_organizations', models.ManyToManyField(related_name='participating_organizations', to='projects.ParticipatingOrganization')),
                ('person', models.ForeignKey(on_delete=models.CASCADE, blank=True, to='persons.Person', null=True)),
                ('program', models.ForeignKey(on_delete=models.CASCADE, blank=True, to='projects.Program', null=True)),
            ],
            options={
                'ordering': ['qa_id'],
            },
        ),
        migrations.CreateModel(
            name='ProjectAttachment',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(max_length=255, null=True, blank=True)),
                ('last_modified_by', models.CharField(max_length=255, null=True, blank=True)),
                ('attachment', models.FileField(null=True, upload_to=projects.models.get_project_attachment_storage_path, blank=True)),
                ('the_name', models.CharField(max_length=255, null=True, blank=True)),
                ('the_size', models.CharField(max_length=255, null=True, blank=True)),
                ('where_from', models.CharField(max_length=255, null=True, blank=True)),
                ('project', models.ForeignKey(on_delete=models.CASCADE, blank=True, to='projects.Project', null=True)),
            ],
            options={
                'ordering': ['the_name'],
            },
        ),
        migrations.CreateModel(
            name='ProjectCategory',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(max_length=255, null=True, blank=True)),
                ('last_modified_by', models.CharField(max_length=255, null=True, blank=True)),
                ('the_name', models.CharField(max_length=255, null=True, blank=True)),
                ('is_active', models.CharField(blank=True, max_length=2, null=True, choices=[(b'', b''), (b'Y', b'Y'), (b'N', b'N')])),
                ('user', models.ForeignKey(on_delete=models.CASCADE, blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'ordering': ['the_name'],
            },
        ),
        migrations.CreateModel(
            name='ProjectLog',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(max_length=255, null=True, blank=True)),
                ('last_modified_by', models.CharField(max_length=255, null=True, blank=True)),
                ('attachment', models.FileField(null=True, upload_to=projects.models.get_log_storage_path, blank=True)),
                ('attachment_02', models.FileField(null=True, upload_to=projects.models.get_log2_storage_path, blank=True)),
                ('attachment_pdf', models.FileField(null=True, upload_to=projects.models.get_pdf_storage_path, blank=True)),
                ('the_name', models.CharField(db_index=True, max_length=255, null=True, blank=True)),
                ('title', models.TextField(db_index=True, null=True, blank=True)),
                ('the_description', models.TextField(null=True, blank=True)),
                ('weblink', models.CharField(max_length=255, null=True, blank=True)),
                ('ordering', models.DecimalField(null=True, max_digits=10, decimal_places=1, blank=True)),
                ('qa_id', models.CharField(db_index=True, max_length=255, null=True, blank=True)),
                ('qa_log_number', models.CharField(db_index=True, max_length=255, unique=True, null=True, blank=True)),
                ('qa_log_number_last', models.CharField(max_length=255, null=True, blank=True)),
                ('qa_log_number_x', models.IntegerField(null=True, blank=True)),
                ('qa_log_number_y', models.IntegerField(null=True, blank=True)),
                ('recommendation', models.TextField(null=True, blank=True)),
                ('date_received', models.DateField(db_index=True, null=True, blank=True)),
                ('date_reviewed', models.DateField(db_index=True, null=True, blank=True)),
                ('date_approved', models.DateField(db_index=True, null=True, blank=True)),
                ('lco_tracking_number', models.CharField(db_index=True, max_length=255, null=True, blank=True)),
                ('omis_task_number', models.CharField(db_index=True, max_length=255, null=True, blank=True)),
                ('qa_view_required', models.CharField(blank=True, max_length=5, null=True, choices=[(b'', b''), (b'Y', b'Y'), (b'N', b'N')])),
                ('organization', models.CharField(db_index=True, max_length=255, null=True, blank=True)),
                ('audit_location', models.CharField(db_index=True, max_length=255, null=True, blank=True)),
                ('audit_date', models.DateField(null=True, blank=True)),
                ('software_status', models.CharField(blank=True, max_length=45, null=True, choices=[(b'', b''), (b'Active', b'Active'), (b'Inactive', b'Inactive')])),
                ('public_or_private', models.CharField(blank=True, max_length=25, null=True, choices=[(b'', b''), (b'PUBLIC', b'PUBLIC'), (b'PRIVATE', b'PRIVATE')])),
                ('number_of_finding', models.CharField(max_length=25, null=True, blank=True)),
                ('is_finding_resolved', models.CharField(blank=True, max_length=25, null=True, choices=[(b'', b''), (b'Y', b'Y'), (b'N', b'N')])),
                ('the_finding', models.CharField(max_length=255, null=True, blank=True)),
                ('auditor', models.CharField(db_index=True, max_length=255, null=True, blank=True)),
                ('auditor_organization', models.CharField(db_index=True, max_length=255, null=True, blank=True)),
                ('qa_review_date', models.DateField(db_index=True, null=True, blank=True)),
                ('qa_review_email_list', models.TextField(db_index=True, null=True, blank=True)),
                ('qa_review_comment', models.TextField(db_index=True, null=True, blank=True)),
                ('are_corrective_actions_completed', models.CharField(blank=True, max_length=25, null=True, choices=[(b'', b''), (b'Y', b'Y'), (b'N', b'N'), (b'NA', b'NA')])),
                ('date_audit_report_submitted', models.DateField(db_index=True, null=True, blank=True)),
                ('date_audit_closed', models.DateField(db_index=True, null=True, blank=True)),
                ('date_responses_received', models.DateField(db_index=True, null=True, blank=True)),
                ('audit_type', models.ForeignKey(on_delete=models.CASCADE, blank=True, to='audits.AuditType', null=True)),
                ('branch', models.ForeignKey(on_delete=models.CASCADE, blank=True, to='branches.Branch', null=True)),
                ('division', models.ForeignKey(on_delete=models.CASCADE, blank=True, to='divisions.Division', null=True)),
                ('project', models.ForeignKey(on_delete=models.CASCADE, blank=True, to='projects.Project', null=True)),
            ],
            options={
                'ordering': ['qa_log_number'],
            },
        ),
        migrations.CreateModel(
            name='ProjectLogType',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(max_length=255, null=True, blank=True)),
                ('last_modified_by', models.CharField(max_length=255, null=True, blank=True)),
                ('the_name', models.CharField(max_length=255, null=True, blank=True)),
                ('abbreviation', models.CharField(max_length=25, null=True, blank=True)),
                ('next_major_number', models.IntegerField(null=True, blank=True)),
                ('is_active', models.CharField(blank=True, max_length=2, null=True, choices=[(b'', b''), (b'Y', b'Y'), (b'N', b'N')])),
                ('user', models.ForeignKey(on_delete=models.CASCADE, blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'ordering': ['the_name'],
            },
        ),
        migrations.CreateModel(
            name='ProjectNumber',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(max_length=255, null=True, blank=True)),
                ('last_modified_by', models.CharField(max_length=255, null=True, blank=True)),
                ('start_serial_number', models.IntegerField(null=True, blank=True)),
                ('this_serial_number', models.IntegerField(null=True, blank=True)),
                ('next_serial_number', models.IntegerField(null=True, blank=True)),
                ('the_name', models.CharField(max_length=255, null=True, blank=True)),
                ('user', models.ForeignKey(on_delete=models.CASCADE, blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectProjectCategory',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(max_length=255, null=True, blank=True)),
                ('last_modified_by', models.CharField(max_length=255, null=True, blank=True)),
                ('the_description', models.TextField(null=True, blank=True)),
                ('project', models.ForeignKey(on_delete=models.CASCADE, blank=True, to='projects.Project', null=True)),
                ('project_category', models.ForeignKey(on_delete=models.CASCADE, blank=True, to='projects.ProjectCategory', null=True)),
                ('user', models.ForeignKey(on_delete=models.CASCADE, blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectRequest',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(max_length=255, null=True, blank=True)),
                ('last_modified_by', models.CharField(max_length=255, null=True, blank=True)),
                ('attachment_pdf', models.FileField(null=True, upload_to=projects.models.get_pdf_storage_path, blank=True)),
                ('date_submitted', models.DateField(db_index=True, null=True, blank=True)),
                ('product_title', models.TextField(db_index=True, null=True, blank=True)),
                ('product_type_other', models.TextField(null=True, blank=True)),
                ('date_review_requested_by', models.DateField(db_index=True, null=True, blank=True)),
                ('was_qapp_required', models.CharField(blank=True, max_length=5, null=True, choices=[(b'', b''), (b'Y', b'Y'), (b'N', b'N')])),
                ('was_qapp_prepared', models.CharField(blank=True, max_length=5, null=True, choices=[(b'', b''), (b'Y', b'Y'), (b'N', b'N')])),
                ('project_qa_id', models.CharField(db_index=True, max_length=45, null=True, blank=True)),
                ('project_approval_date', models.DateField(db_index=True, null=True, blank=True)),
                ('qapp_status_explanation', models.TextField(null=True, blank=True)),
                ('dqi_met', models.CharField(blank=True, max_length=5, null=True, choices=[(b'', b''), (b'Y', b'Y'), (b'N', b'N')])),
                ('dqi_met_some', models.CharField(blank=True, max_length=5, null=True, choices=[(b'', b''), (b'Y', b'Y'), (b'N', b'N')])),
                ('dqi_met_some_bad_data', models.CharField(blank=True, max_length=5, null=True, choices=[(b'', b''), (b'Y', b'Y'), (b'N', b'N')])),
                ('dqi_na', models.CharField(blank=True, max_length=5, null=True, choices=[(b'', b''), (b'Y', b'Y'), (b'N', b'N')])),
                ('dqi_explanation', models.TextField(null=True, blank=True)),
                ('electronic_signature', models.CharField(db_index=True, max_length=45, null=True, blank=True)),
                ('date_electronic_signature', models.DateField(db_index=True, null=True, blank=True)),
                ('electronic_signature_title', models.CharField(db_index=True, max_length=45, null=True, blank=True)),
                ('email_list', models.TextField(null=True, blank=True)),
                ('project', models.ForeignKey(on_delete=models.CASCADE, blank=True, to='projects.Project', null=True)),
                ('project_log', models.ForeignKey(on_delete=models.CASCADE, blank=True, to='projects.ProjectLog', null=True)),
                ('project_log_type', models.ForeignKey(on_delete=models.CASCADE, to='projects.ProjectLogType', null=True)),
                ('technical_lead', models.ForeignKey(on_delete=models.CASCADE, blank=True, to='persons.Person', null=True)),
                ('user', models.ForeignKey(on_delete=models.CASCADE, blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectStatus',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(max_length=255, null=True, blank=True)),
                ('last_modified_by', models.CharField(max_length=255, null=True, blank=True)),
                ('the_name', models.CharField(max_length=255, null=True, blank=True)),
                ('is_active', models.CharField(blank=True, max_length=2, null=True, choices=[(b'', b''), (b'Y', b'Y'), (b'N', b'N')])),
                ('user', models.ForeignKey(on_delete=models.CASCADE, blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'ordering': ['the_name'],
            },
        ),
        migrations.CreateModel(
            name='ProjectType',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(max_length=255, null=True, blank=True)),
                ('last_modified_by', models.CharField(max_length=255, null=True, blank=True)),
                ('the_name', models.CharField(max_length=255, null=True, blank=True)),
                ('is_active', models.CharField(blank=True, max_length=2, null=True, choices=[(b'', b''), (b'Y', b'Y'), (b'N', b'N')])),
                ('user', models.ForeignKey(on_delete=models.CASCADE, blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'ordering': ['the_name'],
            },
        ),
        migrations.CreateModel(
            name='QaCategory',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(max_length=255, null=True, blank=True)),
                ('last_modified_by', models.CharField(max_length=255, null=True, blank=True)),
                ('the_name', models.CharField(max_length=255, null=True, blank=True)),
                ('is_active', models.CharField(blank=True, max_length=2, null=True, choices=[(b'', b''), (b'Y', b'Y'), (b'N', b'N')])),
                ('user', models.ForeignKey(on_delete=models.CASCADE, blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'ordering': ['the_name'],
            },
        ),
        migrations.CreateModel(
            name='QappStatus',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(max_length=255, null=True, blank=True)),
                ('last_modified_by', models.CharField(max_length=255, null=True, blank=True)),
                ('the_name', models.CharField(max_length=255, null=True, blank=True)),
                ('is_active', models.CharField(blank=True, max_length=2, null=True, choices=[(b'', b''), (b'Y', b'Y'), (b'N', b'N')])),
                ('user', models.ForeignKey(on_delete=models.CASCADE, blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'ordering': ['the_name'],
            },
        ),
        migrations.CreateModel(
            name='QaReviewDistribution',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(max_length=255, null=True, blank=True)),
                ('last_modified_by', models.CharField(max_length=255, null=True, blank=True)),
                ('the_name', models.TextField(null=True, blank=True)),
                ('project_log', models.ForeignKey(on_delete=models.CASCADE, blank=True, to='projects.ProjectLog', null=True)),
                ('user', models.ForeignKey(on_delete=models.CASCADE, blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'ordering': ['modified'],
            },
        ),
        migrations.CreateModel(
            name='ReviewType',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(max_length=255, null=True, blank=True)),
                ('last_modified_by', models.CharField(max_length=255, null=True, blank=True)),
                ('the_name', models.CharField(max_length=255, null=True, blank=True)),
                ('abbreviation', models.CharField(max_length=25, null=True, blank=True)),
                ('next_major_number', models.IntegerField(null=True, blank=True)),
                ('user', models.ForeignKey(on_delete=models.CASCADE, blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'ordering': ['the_name'],
            },
        ),
        migrations.CreateModel(
            name='VehicleType',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(max_length=255, null=True, blank=True)),
                ('last_modified_by', models.CharField(max_length=255, null=True, blank=True)),
                ('the_name', models.CharField(max_length=255, null=True, blank=True)),
                ('is_active', models.CharField(blank=True, max_length=2, null=True, choices=[(b'', b''), (b'Y', b'Y'), (b'N', b'N')])),
                ('user', models.ForeignKey(on_delete=models.CASCADE, blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'ordering': ['the_name'],
            },
        ),
        migrations.AddField(
            model_name='projectlog',
            name='project_log_type',
            field=models.ForeignKey(on_delete=models.CASCADE, to='projects.ProjectLogType', null=True),
        ),
        migrations.AddField(
            model_name='projectlog',
            name='review_type',
            field=models.ForeignKey(on_delete=models.CASCADE, blank=True, to='projects.ReviewType', null=True),
        ),
        migrations.AddField(
            model_name='projectlog',
            name='reviewer',
            field=models.ForeignKey(on_delete=models.CASCADE, related_name='reviewer', blank=True, to='persons.Person', null=True),
        ),
        migrations.AddField(
            model_name='projectlog',
            name='technical_lead',
            field=models.ForeignKey(on_delete=models.CASCADE, related_name='technical_lead', blank=True, to='persons.Person', null=True),
        ),
        migrations.AddField(
            model_name='projectlog',
            name='user',
            field=models.ForeignKey(on_delete=models.CASCADE, blank=True, to=settings.AUTH_USER_MODEL, null=True),
        ),
        migrations.AddField(
            model_name='projectattachment',
            name='project_log',
            field=models.ForeignKey(on_delete=models.CASCADE, blank=True, to='projects.ProjectLog', null=True),
        ),
        migrations.AddField(
            model_name='projectattachment',
            name='user',
            field=models.ForeignKey(on_delete=models.CASCADE, blank=True, to=settings.AUTH_USER_MODEL, null=True),
        ),
        migrations.AddField(
            model_name='project',
            name='project_category',
            field=models.ForeignKey(on_delete=models.CASCADE, blank=True, to='projects.ProjectCategory', null=True),
        ),
        migrations.AddField(
            model_name='project',
            name='project_status',
            field=models.ForeignKey(on_delete=models.CASCADE, blank=True, to='projects.ProjectStatus', null=True),
        ),
        migrations.AddField(
            model_name='project',
            name='project_type',
            field=models.ForeignKey(on_delete=models.CASCADE, blank=True, to='projects.ProjectType', null=True),
        ),
        migrations.AddField(
            model_name='project',
            name='qa_category',
            field=models.ForeignKey(on_delete=models.CASCADE, blank=True, to='projects.QaCategory', null=True),
        ),
        migrations.AddField(
            model_name='project',
            name='qapp_status',
            field=models.ForeignKey(on_delete=models.CASCADE, blank=True, to='projects.QappStatus', null=True),
        ),
        migrations.AddField(
            model_name='project',
            name='user',
            field=models.ForeignKey(on_delete=models.CASCADE, blank=True, to=settings.AUTH_USER_MODEL, null=True),
        ),
        migrations.AddField(
            model_name='project',
            name='vehicle_type',
            field=models.ForeignKey(on_delete=models.CASCADE, blank=True, to='projects.VehicleType', null=True),
        ),
    ]
