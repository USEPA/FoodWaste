# Generated by Django 3.0.3 on 2020-02-07 20:55

import DataSearch.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('teams', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('file', models.FileField(blank=True, null=True, upload_to=DataSearch.models.get_attachment_storage_path)),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DataAttachmentMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attachment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachment_existing_data', to='DataSearch.Attachment')),
            ],
        ),
        migrations.CreateModel(
            name='ExistingData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('work', models.CharField(max_length=255)),
                ('email', models.CharField(max_length=255)),
                ('phone', models.CharField(max_length=32)),
                ('search', models.CharField(max_length=255)),
                ('source_title', models.CharField(blank=True, max_length=255, null=True)),
                ('keywords', models.CharField(blank=True, max_length=1024, null=True)),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
                ('disclaimer_req', models.BooleanField()),
                ('citation', models.CharField(max_length=2048)),
                ('date_accessed', models.DateTimeField(default=django.utils.timezone.now)),
                ('comments', models.CharField(blank=True, max_length=2048, null=True)),
                ('attachments', models.ManyToManyField(through='DataSearch.DataAttachmentMap', to='DataSearch.Attachment')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ExistingDataSource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='ExistingDataSharingTeamMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_date', models.DateTimeField(auto_now_add=True)),
                ('can_edit', models.BooleanField()),
                ('data', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='existing_data_teams', to='DataSearch.ExistingData')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team_existing_data', to='teams.Team')),
            ],
        ),
        migrations.AddField(
            model_name='existingdata',
            name='source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='existing_data_sources', to='DataSearch.ExistingDataSource'),
        ),
        migrations.AddField(
            model_name='existingdata',
            name='teams',
            field=models.ManyToManyField(through='DataSearch.ExistingDataSharingTeamMap', to='teams.Team'),
        ),
        migrations.AddField(
            model_name='dataattachmentmap',
            name='data',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='existing_data_attachments', to='DataSearch.ExistingData'),
        ),
    ]
